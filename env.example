# ==============================================================================
# MOBO Discord Bot Configuration
# ==============================================================================
# Copy this file to .env and fill in your actual values
# All environment variables are case-insensitive due to pydantic-settings configuration

# ==============================================================================
# OPENAI CONFIGURATION (Required)
# ==============================================================================

# Your OpenAI API key - get this from https://platform.openai.com/api-keys
# This is required for the bot to function
OPENAI_API_KEY=your_openai_api_key_here

# OpenAI model to use for chat completions
# Recommended: gpt-4o-mini (cost-effective), gpt-4o (more capable), gpt-3.5-turbo (fastest)
# Default: gpt-4o-mini
OPENAI_MODEL=gpt-4o-mini

# Controls randomness in responses (0.0 = deterministic, 2.0 = very creative)
# Range: 0.0 to 2.0, Default: 0.7
OPENAI_TEMPERATURE=0.7

# ==============================================================================
# IMAGE GENERATION CONFIGURATION
# ==============================================================================

# Image generation model to use
# Available: dall-e-3 (higher quality), dall-e-2 (faster/cheaper)
# Default: dall-e-3
IMAGE_MODEL=dall-e-3

# Generated image dimensions
# dall-e-3 options: 1024x1024, 1536x1024, 1024x1536, 1792x1024, 1024x1792
# dall-e-2 options: 256x256, 512x512, 1024x1024
# Default: 1024x1024
IMAGE_SIZE=1024x1024

# Image quality setting (dall-e-3 only)
# Options: standard (faster), hd (higher quality)
# Default: standard
IMAGE_QUALITY=standard

# Maximum images a user can generate per day
# Default: 20
IMAGE_DAILY_LIMIT=20

# Maximum images a user can generate per hour
# Default: 2
IMAGE_HOURLY_LIMIT=2

# ==============================================================================
# DISCORD CONFIGURATION (Required)
# ==============================================================================

# Your Discord bot token - get this from https://discord.com/developers/applications
# This is required for the bot to connect to Discord
DISCORD_TOKEN=your_discord_bot_token_here

# ==============================================================================
# BOT BEHAVIOR CONFIGURATION
# ==============================================================================
# System Prompt - Choose ONE of the following options (priority: direct > file > url):

# Option 1: Direct system prompt (highest priority)
# Uncomment and customize the line below to use a direct prompt
# SYSTEM_PROMPT="You are a helpful Discord bot assistant with excellent memory."

# Option 2: Local file path (second priority)
# Path to a text file containing the system prompt
# Default: example_system_prompt.txt (provided with the project)
SYSTEM_PROMPT_FILE="example_system_prompt.txt"

# Option 3: URL to fetch prompt from (lowest priority)
# HTTP/HTTPS URL to fetch the system prompt from
# Uncomment to use a remote prompt
# SYSTEM_PROMPT_URL="https://example.com/system_prompt.txt"

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# PostgreSQL database connection URL
# Format: postgresql+asyncpg://username:password@host:port/database_name
# Default connects to local PostgreSQL with docker-compose credentials
DATABASE_URL=postgresql+asyncpg://mobo:mobo@localhost:5432/mobo

# Enable SQL query logging for debugging
# Set to true to log all database queries (useful for development)
# Default: false
DATABASE_ECHO=false

# Connection pool size for database connections
# Number of connections to maintain in the pool
# Default: 10
DATABASE_POOL_SIZE=10

# Maximum number of connections that can overflow the pool
# Additional connections beyond pool_size that can be created
# Default: 20
DATABASE_MAX_OVERFLOW=20

# ==============================================================================
# DEVELOPMENT NOTES
# ==============================================================================
#
# 1. Required Variables:
#    - OPENAI_API_KEY: Must be set for AI functionality
#    - DISCORD_TOKEN: Must be set for Discord connectivity
#    - At least one system prompt option (SYSTEM_PROMPT, SYSTEM_PROMPT_FILE, or SYSTEM_PROMPT_URL)
#
# 2. Database Setup:
#    - Use "just dev" to start PostgreSQL in Docker for development
#    - For production, set up a proper PostgreSQL instance with pgvector extension
#
# 3. Docker Deployment:
#    - When using docker-compose, DATABASE_URL should use service name:
#      postgresql+asyncpg://mobo:mobo@postgres:5432/mobo
#
# 4. Security:
#    - Never commit .env files to version control
#    - Use strong, unique credentials for production deployments
#    - Regenerate API keys if compromised